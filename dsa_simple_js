// // reverse an array:
// function ArrReverse(array){
//   let len = array.length;
//   let low = 0;
//   let high = len-1;
//   while(low<high){
//     // let mid = math.floor((low+high)/2);
//    let temp = array[low];
//    array[low] = array[high];
//    array[high] = temp;
//    low = low+1;
//    high = high-1;
//   }
//   return array
// }
// const arr = [2,3,4,5,6,7]
// console.log(ArrReverse(arr))


// // K rotate an array
// function ArrRotate(array, k){
//   const len = array.length-1;
//   for(let i = 0;i<k;i++){
//     let temp = array[len];
//     array.pop()
//     array.unshift(temp);

    
//   }
//   return array
// }

// const array = [2,3,4,5,6,7];
// const k = 2
// console.log(ArrRotate(array ,k))



// // Find the smallest missing number

// function FindSmallest(array, n, m){
//     let smallest = 0;
//     if (!array.includes(smallest)){
//         return smallest;
//     } else {
//         smallest = array[0];
//     }
//     for(let i = 1;i<=n-1;i++){
//         if (smallest+1 == array[i]){
//             smallest = smallest+1;
//         } else {
//             return smallest+1
//         }
//     }
//     return array[n-1]+1
// }
// const array = [0,1, 2, 3, 4, 5, 6, 7, 10], n = 9, m = 10 
// console.log(FindSmallest(array, n, m))


// // Find a peak element which is not smaller than its neighbours

// function FindPeakElement(array,n) {
//     let arrResult = [];
//     for(let i = 1; i<=n-2;i++){
//         if (array[i-1]<array[i] && array[i]>array[i+1]){
//             arrResult.push(array[i]);
//         }
//     }
//     return arrResult;
// }
// const array = [10, 20, 15, 2, 23, 90, 67], n = 7
// console.log(FindPeakElement(array, n))


// // Longest Common Prefix using Binary Search

// function longestCommonPrefix(strings) {
//     if (strings.length === 0) {
//         return "";
//     }

//     let prefix = strings[0];

//     for (let i = 1; i < strings.length; i++) {
//         let j = 0;
//         while (j < prefix.length && j < strings[i].length && prefix[j] === strings[i][j]) {
//             j++;
//         }
//         prefix = prefix.substring(0, j);
//         if (prefix === "") {
//             break;
//         }
//     }
//     return prefix;
// }

// const inputArray = ["geeksforgeeks", "geeks", "geek", "geezer"];
// const result = longestCommonPrefix(inputArray);
// console.log(result)

